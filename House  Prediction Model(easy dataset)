import numpy as np
import matplotlib.pyplot as plt

x_train=np.array([1.0,2.0,3.0,4.0,5.0])
y_train=np.array([300,500,700,900,1100])
print(x_train)
print(y_train)

m=len(x_train)
print(m)

plt.scatter(x_train, y_train, marker='x',color = 'green')
plt.title("Housing Prices")
plt.xlabel("Size (1000 sqft)")
plt.ylabel("Price (1000s of dollars)")

def compute_model_output(x, w, b):

    m = x.shape[0]
    f_wb = np.zeros(m)
    for i in range(m):
        f_wb[i] = w * x[i] + b

    return f_wb

# Define the initial values for w and b
w = 200 # Example value for the weight/slope
b = 100  # Example value for the bias/intercept

tmp_f_wb = compute_model_output(x_train, w, b,)

# Plot our model prediction
plt.plot(x_train, tmp_f_wb, c='b',label='Our Prediction')

# Plot the data points
plt.scatter(x_train, y_train, marker='x', c='r',label='Actual Values')

# Set the title
plt.title("Housing Prices")
# Set the y-axis label
plt.ylabel('Price (in 1000s of dollars)')
# Set the x-axis label
plt.xlabel('Size (1000 sqft)')
plt.legend()
plt.show()


w=200
b=100
x_i=2.5
cost_1500sqft=w*x_i+b
print(cost_1500sqft,"Thousand Dollars")
